name: demo
root: <%= ENV["PWD"] %>

# Runs on project start, always
on_project_start: brew services start zookeeper; brew services start kafka; sleep 2

windows:
  - run:
      layout: tiled
      panes:
        - cd streamingdemo; source .envrc; cd src/streamingdemo; DEVICE_IDS=drnic-pi,drnic-laptop go run main.go
        - cd images-from-postapi; source .envrc; cd src/images-from-postapi; DEVICE_IDS=drnic-pi,drnic-pi,drnic-laptop go run main.go
        - sleep 5; cd imagesfromopencv-to-postapi; DEVICE_ID=drnic-laptop POST_ENDPOINT=http://localhost:8000/image CAMERA=opencv python3 app.py
        # - cd statusconsumer; python3 app.py
        - cd objectdetector; DEVICE_ID=drnic-laptop python3 app.py
        - cd edgedetector;   DEVICE_ID=drnic-laptop python3 app.py
        - cd objectdetector; DEVICE_ID=drnic-pi python3 app.py
        - cd edgedetector;   DEVICE_ID=drnic-pi python3 app.py
        # - cd imagewatcher-go; source .envrc; cd src/imagewatcher; IMAGE_TOPIC=opencv-kafka-demo-raw-drnic-laptop PORT=8080 go run main.go
        # - cd imagewatcher-go; source .envrc; cd src/imagewatcher; IMAGE_TOPIC=opencv-kafka-demo-objectdetector-drnic-laptop PORT=8081 go run main.go
        # - cd imagewatcher-go; source .envrc; cd src/imagewatcher; IMAGE_TOPIC=opencv-kafka-demo-edgedetector-drnic-laptop PORT=8082 go run main.go
  - cf-logs:
      layout: tiled
      panes:
        - cf logs statusconsumer
        - cf logs images-from-postapi
        - cf logs objectdetector-drnic-laptop
        - cf logs streamingdemo
